class Solution:
    def maximalRectangle(self, matrix: List[List[str]]) -> int:
        if not matrix or not matrix[0]:
            return 0
        n = len(matrix[0])  # 矩阵的列数.
        height = [0] * (n+1) #heigiht最后补了一个0.
        max_area = 0
        for row in matrix:
            # 计算h
            for i in range(n):
                height[i] = height[i]+1 if row[i]=='1' else 0
            # 找出所有h和w的组合
            #============下面是84题的问题即可.
            stack = [-1]#这个是用来计算0索引的.因为0索引也要计算区间宽度是1.所以补上-1即可.
            for j in range(n + 1):
                while height[j] < height[stack[-1]]: # 最大栈.
                    h = height[stack.pop()]
                    w = j - 1 - stack[-1]
                    max_area = max(max_area, h * w)
                stack.append(j)
        return max_area